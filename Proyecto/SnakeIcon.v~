

module SnakeIcon
(
	input wire Clock,
	input wire Reset,
	input wire iCtrlOff,
	input wire iIconTick,	
	input wire [7:0] iPixelRow,
	input wire [7:0] iPixelCol,
	input wire [7:0] iLocationX,
	input wire [7:0] iLocationY,
	input wire [7:0] iFoodLocationX,
	input wire [7:0] iFoodLocationY,
	output reg [3:0] oIcon,
	output reg [7:0] oSnakeLenght,
	output reg oGameOver,
	output reg oFoodGen
);

reg [7:0] rHeadX,rHeadY;
reg [15:0] rBodyStack[100:0];
reg [7:0] i,j;


always@(iPixelCol,iPixelRow) 
begin
	/*Start the generation of body*/
	case({pixel_col,pixel_row})
		rBodyStack[0]:oIcon <= 3'b001;
		rBodyStack[1]:oIcon <= 3'b001;
		rBodyStack[2]:oIcon <= 3'b001;
		rBodyStack[3]:oIcon <= 3'b001;
		rBodyStack[4]:oIcon <= 3'b001;
		rBodyStack[5]:oIcon <= 3'b001;
		rBodyStack[6]:oIcon <= 3'b001;
		rBodyStack[7]:oIcon <= 3'b001;
		rBodyStack[8]:oIcon <= 3'b001;
		rBodyStack[9]:oIcon <= 3'b001;
		rBodyStack[10]:oIcon <= 3'b001;
		rBodyStack[11]:oIcon <= 3'b001;
		rBodyStack[12]:oIcon <= 3'b001;
		rBodyStack[13]:oIcon <= 3'b001;
		rBodyStack[14]:oIcon <= 3'b001;
		rBodyStack[15]:oIcon <= 3'b001;
		rBodyStack[16]:oIcon <= 3'b001;
		rBodyStack[17]:oIcon <= 3'b001;
		rBodyStack[18]:oIcon <= 3'b001;
		rBodyStack[19]:oIcon <= 3'b001;
		rBodyStack[20]:oIcon <= 3'b001;
		rBodyStack[21]:oIcon <= 3'b001;
		rBodyStack[22]:oIcon <= 3'b001;
		rBodyStack[23]:oIcon <= 3'b001;
		rBodyStack[24]:oIcon <= 3'b001;
		rBodyStack[25]:oIcon <= 3'b001;
		rBodyStack[26]:oIcon <= 3'b001;
		rBodyStack[27]:oIcon <= 3'b001;
		rBodyStack[28]:oIcon <= 3'b001;
		rBodyStack[29]:oIcon <= 3'b001;
		rBodyStack[30]:oIcon <= 3'b001;
		rBodyStack[31]:oIcon <= 3'b001;
		rBodyStack[32]:oIcon <= 3'b001;
		rBodyStack[33]:oIcon <= 3'b001;
		rBodyStack[34]:oIcon <= 3'b001;
		rBodyStack[35]:oIcon <= 3'b001;
		rBodyStack[36]:oIcon <= 3'b001;
		rBodyStack[37]:oIcon <= 3'b001;
		rBodyStack[38]:oIcon <= 3'b001;
		rBodyStack[39]:oIcon <= 3'b001;
		rBodyStack[40]:oIcon <= 3'b001;
		rBodyStack[41]:oIcon <= 3'b001;
		rBodyStack[42]:oIcon <= 3'b001;
		default:oIcon <= 3'b000; /*This will be used in the colorizer to set the priority*/
	endcase
end

always @(posedge Reset or posedge iIconTick)
begin 
	if(Reset)
	begin
		oGameOver = 1'b0;
		oSnakeLenght 8'd6;
		for ( i=0;i<=100;i=i+1 ) 
		begin
			rBodyStack[i] = 16'd0;
		end
		rBodyStack[17] = {8'h2F,8'h40};
		rBodyStack[16] = {8'h30,8'h40};
		rBodyStack[15] = {8'h31,8'h40};
		rBodyStack[14] = {8'h32,8'h40};
		rBodyStack[13] = {8'h33,8'h40};
		rBodyStack[12] = {8'h34,8'h40};
		rBodyStack[11] = {8'h35,8'h40};
		rBodyStack[10] = {8'h36,8'h40};
		rBodyStack[9] = {8'h37,8'h40};
		rBodyStack[8] = {8'h38,8'h40};
		rBodyStack[7] = {8'h39,8'h40};
		rBodyStack[6] = {8'h3A,8'h40};
		rBodyStack[5] = {8'h3B,8'h40};
		rBodyStack[4] = {8'h3C,8'h40};
		rBodyStack[3] = {8'h3D,8'h40};
		rBodyStack[2] = {8'h3E,8'h40};
		rBodyStack[1] = {8'h3F,8'h40};
		rBodyStack[0] = {8'h40,8'h40};
	end
	else
	begin
		rHeadX = iLocationX;
		rHeadY = iLocationY;
		/*Start generation of the body dynamically while the snake eats more food*/
		for(i=100;i>=1;i=i-1) 
		begin 
			if(i <= oSnakeLenght && iCtrlOff == 0) //iCtrlOff assures that the game is not yet over
				rBodyStack[i] = rBodyStack[i-1];
			else 
			begin
				rBodyStack[i] = 16'h0;
				oGameOver = 0;
			end
		end
		if(iCtrlOff)
			rBodyStack[0] = 16'b0;
		else
			rBodyStack = {rHeadX,rHeadY};

		if (iCtrlOff ==0 &&(iFoodLocationX > 8'd137 || iFoodLocationY > 8'd109 || iFoodLocationX < 8' || iFoodLocationY < 8'd11))
			oFoodGen  = 1;
		else 
			oFoodGen  = 0;

		if(iCtrlOff == 0 && rBodyStack[0]=={iFoodLocationX,iFoodLocationY}) 
		begin //Check if the head location of the snake is eual tothe location of the food
			oFoodGen = 1; //If the above condition is met the oFoodGen is set high to generate the new location for the food
	/*The levels of the snake game are based on the updating length of the snake !*/
			if( oSnakeLenght == 8'd8 ) /*Contion to jump from lvl - 1  to lvl - 2*/
				oSnakeLenght = oSnakeLenght + 8'd5;
			else if(oSnakeLenght == 14) /*Contion to jump from lvl - 2  to lvl - 3*/
				oSnakeLenght = oSnakeLenght + 8'd10;
			else if( oSnakeLenght == 25) /*Contion to jump from lvl - 3  to You Won !*/
				oSnakeLenght = oSnakeLenght + 8'd15;
			else
				oSnakeLenght = oSnakeLenght + 8'd1; /*When the snake is in a particular level its body increments by 1 when it eats food */

		end
		else 
			oFoodGen = 0;
		
		for(j=100;j>=1;j=j-1) 
		begin
			if( (rBodyStack[0] == rBodyStack[j]) &&(j <= oSnakeLenght)) /*Check the condition 1 - If the head location is equal to any of the body locations the game is over*/
				oGameOver = 1;
	 		else  /*This else has been used just to maintain a flip-flop kind of harware instead of a latch*/
				j=j;
		end

		if ( (oSnakeLenght >= 8'd40)||( rBodyStack[0][15:8] == 8'd145 )|| ( rBodyStack[0][15:8] == 8'd16 )|| ( rBodyStack[0][7:0] == 8'd111 )||( rBodyStack[0][7:0] == 8'd10 ) )
/*The above condition checks the boundary hit condition and also the 'You won !' condition.Observer the 'oSnakeLenght >= 8'd40'
in the above condition.
*/			oGameOver = 1;
/*End check for game over*/
	end
end
endmodule
			

